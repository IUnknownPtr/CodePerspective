
now
	show only hit in test mode
	show only hit when zoomed in on unhit
	show unhit for code coverage
			
			
	if room in tree map, put name in upper left and resize under it
		takes care of outside/external panel labels, put some dark black borders between though
			
	layout
	    treemap	
			sizing nodes
				constant, method size, time in func, hits, avg time in func
		spring

	override
		allow user to click view MSIL
		user can edit MSIL
		save, compile and activate override
		override needs to be specified as a compile option
		if override, and new code, then run new code, else run original code
		
		can an entire late bound application be written from scratch inside, c#, later compiled without xray bindings, can xray build itself another xray??
		
	details
		blink green outline when navigated
		clicking on call in list, blinks the link
			show under call dots
			
		hook back/forward buttons up to details
		sorting list view
			
		refresh link at bottom
		higher than method views sum children in long
		timer updating stats
		
		timing
			node  
				timing on bool
				accumulated time as int
				hit count used to find avg accumulated time
				reset option to reset timing on a func
				this way we dont need to keep a time stat for every function call
				keep same stop watch for each thread
		
		perf menu or dialog
			can show functions with most hits
			functions wiht most time in side
			functions with most time per hit
		
		look at functions with links that are no longer active
			see if function could have returned without triggering an exit
			test a chain of functions a b c d e f, where f throws, and c catches, test that intermediate calls have been cleared

		option in xray to keep call/timing stats
		

	left/right keys - zoom in/out

	tool  strip
		clear filtering withen active
		button when errors in the debug log
		item to draw box around smaller or just a group of functions and zoom in only on that
		

	hold down tab or a toggel button to show labels in upper right of functions that can fit the label
	
	when going from spring to tree map view, animate rest of map hiding, and called functions remaining, and moving towards gravity

	recompile mscorlib, and put in same dir as software so my internal one is used instead
		test recompiling mscorlib and rest of .net and having it used locally
			see whole app run, debug into windows libs, use ilasm to inspect code
			partner with the red code to get their disassembler
			disassemble their dissassembler to STEAL their disassembler
				reflector has global method - a$PST06000001
			re-compiled reflector failing to launch

	show array/map sizes in debug
	
	future 
		people write and modify code as the app runs
		people can collaborate and write running software in real time
		full introspection and manipulation of all running objects


goal
	if todo items helps me understand app better then its higher on the list
	ill know its ready when i can xray any app and in a few minutes understand how the app works and is structured
	in my brain coding is visual, i make connections between objects, but in practice i dont code with objects, 
		but text and am forced to imagine the visual which blows your mind the larger the program becomes
	then the 3d shit, go gibson
	Test - SwarmNLP (simple), Paint.Net, RiseOp (straight c#), Wells (VB), Storm (many files mixed code), release/debug
		world wind, WPF, mscorlib, reflector
	testing: investigate how color control works in paint.net
	priorities - external, details, spring, 3d

xray gui
	right click option to show msil for function, or fields of a class, msil could have hyper links to other functions
	show calls - internal, external in, external out
		toolbar to toggle the above, plus clear filters
	some sort of bread crumbs in visualizer to go forward/back more easily - could be done with wrap panel
		drop down shows other nodes
	mouse over instance count
	   for green nodes (entry points) display the instance count
	current redraw time / fps
	saving current option set to use between runs
		saves current select/ignore settings, user can label as 'transfer graph' etc..
	show notice somewhere on gui if there are entries in the debug log
	how too zoom in on piddly functions?
	right click extended info - shows hit rate, maybe timing, what functions have been called from it
	
springs
	only show hit boxes
	free moving, hanging, the repulse each other
	the less related 2 objects are the more repulsive they are
	opens another with boxes connected by strings
	mirrors treemap window, selections, ignores, etc.. the windows are linked
	maybe use a splitter to the user gets 2 concurrent views
	option to spawn more xray windows so differnt classes can be viewed in diff windows, or trees simultaneously

instance tracking
	option in builder that passes 'this' in function call
	xlib stores 'this' in a weak reference map
	user can right click on node and do view instances which allows viewing all the vars of each instance

bugs 
	these files not building - dragonfly.loki, dragonfly.storm.core, DragonFly.Storm.World.Client, DragonFly.Util.Native, DragonFly.Video.MXF
    mscorlib, system.core, reflector
    
build
	options
		track construction, threads
	progress bar of file ops
	ability to pause tracking in interface
	time how long it takes to do redraw, option to draw less frames, option to set fps, which mods frames/timer settings - option in viz
	
release
	need to take out any storm/wells research refs

advanced
	get to work with dlls, users pick entry function, should make asp tracking work
	xray search box, as letters are typed in, matching function name boxes are bolded
	easter egg - extreme zoom in factal hacker code effect
	 
flow tracking
	when external method is called, add it to a name space and make optional to add the 'borders' tree map
	way to analyze hits to external apis and libraries we didnt compile with
	use moving dots show functions talking, would be cool to use spaces between classes as 'highways'
	draw dependencies along border with moat between actual app

	advantage to having flow tracking on outside is that a->b can be indexed with a unique id
	
	option to hide tree map to just watch flow, mouse over still works to show exactly what functions are hit
		combine with moving blocks in spring view
		
memory tracking
	heap dump tree map ;) can figure out where allocated??
	hash call path to allocated memory
		so we see as a box all strings allocated by a->b->c and its size

function tree map
	how to draw/show anonymous methods
	
	when borders added, enter/exit will surround external function, still given ids same as before
	
	larger xray? these are apps running on your computer as blocks (size by memory, height by cpu) 
		borders are external services - hard drives, network interfaces, sound, display, etc...

3d function tree map
	constant square size, height dependnent on amount of code (cities)
	fly through like hackers
	taller towards middle of box
	load IL and write on the walls of the cube
	black sky
	boxes dark blue semi translucent
	code on walls of box
	code lights up white when function is run
	wsad/mouselook fly through, click highlights selected
	 
release 
	open source with donate button
	put donate button in about of app as well,
	link to my page with other projects like rise op, cant hurt


different colors per thread
	each entry instance has an id, could map instance ids to function calls

	6 red orange yellow green blue purple
	black interlace when threads intersect
	array 0 - 5
	map thread id to array index
	every sec, clear map but keep colors as pref if thread checks in, if not pref is cleared

stack planes - size number of instances
	override ctor / deconstructor and add counters
	for now put number inside box
	need to research iso view mapping, wpf display
	if ctor/finalize not found, create it
    
add to xray ability to gen interface from the classes themselves
   work with program directly, manipulate internal variables 
   and inspect those values on the fly
   use try/catch so that iterating exceptions are handled
   or i guess xray would lock object as iterating...

names
	introspective
	introvert c# csharp .net msil
	xray whoami existance
	soul inside translucent window clear
	xray, invisible, MRI
	scan, clearSense, lucent
	glass, inside out
	soul, spirit, ghost, phantom, spectre
	xray.net
	flow, clarity, system, getting a 'sense' 
	

editor
	click on blocks, edit code
	f5 launches app and everything starts lighting up
	the end of multiple files for projects
		everything is in one file, accessible by a logical tree
		can find classes/vars quickly by typing the name like itunes
	integrate with visual studio for real editing, post build step to use xray

riseop
	what better platform for interactive building, debugging, version control and comm
	
release
	when i make a page with all my apps, put link to c0re in about of all apps so can link back
	contact .net developers individual tell them ive tried their app and would like their opinion on
		the app, what we could do to help them understand their app better
	also good for professors teaching CS
		find schools using C#/VB.Net for the class and ask could it be used as a teaching tool?
		what features would they wany?
		high level app design, how components communicate
	coming into an unfamiliar project and getting a 'sense' of the code quickly
	make a youtube demo video
 
    A useful PRESENTATION tool for engineers to show management how their systems work and inter-operate
		ever want to explain to your manager how the system works easily?