
look at functions with links that are no longer active
	see if function could have returned without triggering an exit
	test a chain of functions a b c d e f, where f throws, and c catches, test that intermediate calls have been cleared

show array/map sizes in debug

when double clicking to zoom on something, keep that node highlighted so its not lost
click highlights nodes


make root node for each file

how too zoom in on piddly functions?
	
goal
	ill know its ready when i can xray any app and in a few minutes understand how the app works and is structured
	extend with options, fix bugs
	next weekend hook up external methods
	in my brain coding is visual, i make connections between objects, but in practice i dont code with objects, 
		but text and am forced to imagine the visual which blows your mind the larger the program becomes
	then the 3d shit, go gibson
	Test - SwarmNLP (simple), Paint.Net, RiseOp (straight c#), Wells (VB), Storm (many files mixed code), release/debug
		world wind still active??

xray gui
	back click goes back, right click gives options (select, ignore(put x on node), view code? (use to edit and recompile?? ;))
	select specific node and only show flow from that
	set dashes in reset timer so they dont speed up on mouse over
	right click ignore, puts box on function and doesnt show calls to/from that
		ignore / select can be functoin, class, namespace
		option to show msil for function, or fields of a class, msil could have hyper links to other functions
	option to mark puts circle in node, easier to track node after zoom in/out and resizing
	option to persist call graph as light translucent green lines
	show calls - internal, external in, external out
	some sort of bread crumbs in visualizer to go forward/back more easily - could be done with wrap panel
	mouse over instance count
	   for green nodes (entry points) display the instance count
	option to show dll/files as blocks, without this option classes in different files will share the same box
		because they're in the same namespace
	current redraw time / fps
	saving current option set to use between runs
		saves current select/ignore settings, user can label as 'transfer graph' etc..
	show notice somewhere on gui if there are entries in the debug log
	
springs
	only show hit boxes
	free moving, hanging, the repulse each other
	the less related 2 objects are the more repulsive they are
	opens another with boxes connected by strings
	mirrors treemap window, selections, ignores, etc.. the windows are linked
	maybe use a splitter to the user gets 2 concurrent views
	option to spawn more xray windows so differnt classes can be viewed in diff windows, or trees simultaneously

instance tracking
	option in builder that passes 'this' in function call
	xlib stores 'this' in a weak reference map
	user can right click on node and do view instances which allows viewing all the vars of each instance

other
	put tooltip on right corner of tip with mouse so easier to read

bugs 
	these files not building - dragonfly.loki, dragonfly.storm.core, DragonFly.Storm.World.Client, DragonFly.Util.Native, DragonFly.Video.MXF

build
	options
		track construction, threads
		option to track anonymous methods
	progress bar of file ops
	ability to pause tracking in interface
	time how long it takes to do redraw, option to draw less frames, option to set fps, which mods frames/timer settings - option in viz
	option to 'test' and just open the dat file
	
release
	need to take out any storm/wells research refs

advanced
	get to work with dlls, users pick entry function, should make asp tracking work
	xray search box, as letters are typed in, matching function name boxes are bolded
	easter egg - extreme zoom in factal hacker code effect
	 
flow tracking
	
	
	when external method is called, add it to a name space and make optional to add the 'borders' tree map
	way to analyze hits to external apis and libraries we didnt compile with
	use moving dots show functions talking, would be cool to use spaces between classes as 'highways'
	draw dependencies along border with moat between actual app
	
	advantage is that delegates can be traced
	
	test with an app with returns and throws mid function
	check out IL and see where exit needs to be put
	stack array per thread id
	enter called
		create an entry between that and the last enter if it does not exist
			entry is hash of 2 ids
				source / dest function id (s + 1) ^ d so if reversed d -> s, different hashes
				draw function marks functions as drawn with unique id
		set the hit counter
		add function id to stack array
	exit called
		move back through stack array and find function
		a function threw then a lot of functions will be skipped
		
	advantage to having flow tracking on outside is that a->b can be indexed with a unique id
	
	option to hide tree map to just watch flow, mouse over still works to show exactly what functions are hit
	
	simple flow tracker
		hit before each method call
		advantage can be used with external functions
	advanced flow tracker
		enter/exit inside function, stacks traced
		advantage is that links between delegates are shown
	
	
memory tracking
	heap dump tree map ;) can figure out where allocated??

function tree map
	few squares out of places
	fading still looks like pulsing flickering
	wells research project has a big space in it
	turn conflicts orange
	how to draw/show anonymous methods
	option to track anonymous methods	
	dont draw or recurse rects that are too small, smaller than 2 pix in width

	hash source / dest function ids and put into hit map
	foreach entry, draw a link, if hit, draw red

	add exit function
	trace enter/exit stack
	insert hash pairs as app flows
	each pair has points and timeout
	move dashed line toward target function
	
	when borders added, enter/exit will surround external function, still given ids same as before
	
	larger xray? these are apps running on your computer as blocks (size by memory, height by cpu) 
		borders are external services - hard drives, network interfaces, sound, display, etc...

3d function tree map
	constant square size, height dependnent on amount of code (cities)
	fly through like hackers
	taller towards middle of box
	load IL and write on the walls of the cube
	black sky
	boxes dark blue semi translucent
	code on walls of box
	code lights up white when function is run
	
heap tree map
	how to get memory allocated from gc, source to clr profiler?


release 
	open source with donate button
	put donate button in about of app as well,
	link to my page with other projects like rise op, cant hurt


different colors per thread
	6 red orange yellow green blue purple
	black interlace when threads intersect
	array 0 - 5
	map thread id to array index
	every sec, clear map but keep colors as pref if thread checks in, if not pref is cleared

stack planes - size number of instances
	override ctor / deconstructor and add counters
	for now put number inside box
	need to research iso view mapping, wpf display
	if ctor/finalize not found, create it
	
use gdi painting without paint event	like wells


wpf
	test cubing tree map, and coloring, default height
	get movement controls working
    block everything, height by instance count
    only hit funcs is very useful to cut down on drawing
    
    wsad/mouselook fly through, click highlights selected
    
add to xray ability to gen interface from the classes themselves
   work with program directly, manipulate internal variables 
   and inspect those values on the fly
   use try/catch so that iterating exceptions are handled
   or i guess xray would lock object as iterating...

names
	introspective
	introvert c# csharp .net msil
	xray whoami existance
	soul inside translucent window clear
	xray, invisible, MRI
	scan, clearSense, lucent
	glass, inside out
	soul, spirit, ghost, phantom, spectre
	xray.net

editor
	click on blocks, edit code
	f5 launches app and everything starts lighting up
	the end of multiple files for projects
		everything is in one file, accessible by a logical tree
		can find classes/vars quickly by typing the name like itunes
	integrate with visual studio for real editing, post build step to use xray

riseop
	what better platform for interactive building, debugging, version control and comm
	
release
	when i make a page with all my apps, put link to c0re in about of all apps so can link back
	contact .net developers individual tell them ive tried their app and would like their opinion on
		the app, what we could do to help them understand their app better
	also good for professors teaching CS
		find schools using C#/VB.Net for the class and ask could it be used as a teaching tool?
		what features would they wany?